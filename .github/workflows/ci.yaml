name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - main
    paths-ignore:
      - .github/**
      - "**/*.md"

jobs:
  # For PRs and anything not a tag
  build-images:
    # For a negative conditional we need to include the ${{ }}
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Docker tags
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            calyptiaci/core-docker-desktop
            ghcr.io/calyptia/core-docker-desktop
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
          # Make sure to align labels with what is in Dockerfile as these overwrite
          labels: |
            org.opencontainers.image.title=Calyptia Core
            org.opencontainers.image.description=Use Calyptia Core within Docker Desktop to manage observability
            org.opencontainers.image.licenses=/LICENSE.txt

      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  publish-images:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      # Need write access to create the release
      contents: write
      # Required for the signing token
      id-token: write
      # Required to upload to ghcr.io
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker tags
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            calyptia/core-docker-desktop
            calyptiaci/core-docker-desktop
            ghcr.io/calyptia/core-docker-desktop
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
          # Make sure to align labels with what is in Dockerfile as these overwrite
          labels: |
            org.opencontainers.image.title=Calyptia Core
            org.opencontainers.image.description=Use Calyptia Core within Docker Desktop to manage observability
            org.opencontainers.image.licenses=/LICENSE.txt

      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Images digests
        run: echo ${{ steps.docker_build.outputs.digest }}

      - uses: sigstore/cosign-installer@main
      - name: Sign Container Image
        continue-on-error: true
        run: |
          COSIGN_EXPERIMENTAL=1 cosign sign --force calyptia/core-docker-desktop@${{ steps.docker_build.outputs.digest }}

      - name: Release on tag
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
